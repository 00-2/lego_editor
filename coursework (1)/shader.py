from OpenGL.GL import *import osclass Shader:  def __init__(self, vertex_path, fragment_path):    with open(os.path.join(os.path.dirname(__file__), vertex_path), mode='r') as stream:      vertex_source = stream.read()    with open(os.path.join(os.path.dirname(__file__), fragment_path), mode='r') as stream:      fragment_source = stream.read()          vertex = glCreateShader(GL_VERTEX_SHADER)    glShaderSource(vertex, vertex_source)    glCompileShader(vertex)    print(glGetShaderInfoLog(vertex))    fragment = glCreateShader(GL_FRAGMENT_SHADER)    glShaderSource(fragment, fragment_source)    glCompileShader(fragment)    print(glGetShaderInfoLog(fragment))    self.program = glCreateProgram()    glAttachShader(self.program, vertex)    glAttachShader(self.program, fragment)    glLinkProgram(self.program)    print(glGetProgramInfoLog(self.program))    glDeleteShader(vertex)    glDeleteShader(fragment)